#!/bin/bash

# Usage: merge_gro -p protein.gro -l lig1.gro lig2.gro ...

import sys

def read_gro_file(filename):
    with open(filename, 'r') as file:
        lines = file.readlines()
    num_atoms = int(lines[1].strip())
    content = lines[2:-1]  # 첫 번째 줄과 두 번째 줄을 제외하고 마지막 줄을 제외한 내용만
    return num_atoms, content

def merge_gro_files(protein_file, ligand_files, output_file):
    # 단백질 파일 읽기
    with open(protein_file, 'r') as file:
        protein_lines = file.readlines()

    # 단백질 파일에서 현재 원자 수 가져오기
    num_atoms_protein = int(protein_lines[1].strip())

    # 리간드 파일의 원자 수와 내용을 가져오기
    total_atoms = num_atoms_protein
    merged_content = []

    for ligand_file in ligand_files:
        num_atoms_ligand, ligand_content = read_gro_file(ligand_file)
        total_atoms += num_atoms_ligand
        merged_content.extend(ligand_content)

    # 단백질 파일에 리간드 내용을 삽입
    final_content = protein_lines[:-1] + merged_content + [protein_lines[-1]]

    # 두 번째 줄의 원자 수 업데이트
    final_content[1] = f"{total_atoms}\n"

    # 최종 내용을 protein-cpx.gro 파일로 저장
    with open(output_file, 'w') as file:
        file.writelines(final_content)

if __name__ == "__main__":
    protein_file = sys.argv[sys.argv.index('-p') + 1]
    ligand_files = sys.argv[sys.argv.index('-l') + 1:]

    merge_gro_files(protein_file, ligand_files, "protein-cpx.gro")

